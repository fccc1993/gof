策略模式: 定义了算法族,分别封装变化部分代码, 可以互相替换, 算法与调用者解耦.
要点:
	良好的 OO 设计必须具备可复用/可扩充/可维护三个特性.


OO(面向对象)基础:
	抽象
	封装
	多态
	继承

设计原则 : 
	1.封装变化
		a. Java 接口不具有实现代码, 所以继承接口无法达到代码复用
	2.多用组合, 少用继承
		a. 组合提高系统可维护性和可扩展性
	3.针对接口编程, 不针对实现编程
		a. 针对接口编程指 针对超类型(接口或抽象类)编程.
		利用多态, 程序可以针对超类型编程, 执行时会根据实际状况执行到真正的行为, 不会被限制在超类型的行为上.