观察者模式: 定义了对象之间一对多依赖, 当一个对象改变状态时, 它的所有依赖者都会收到通知并更新. 

主题和观察者都是用接口, 观察者利用主题的接口向主题注册, 主题利用观察者接口通知观察者. 两者之间正常运作, 又具有松耦合的优点.
设计原则:
	1.为了交互对象之间的松耦合设计而努力.
		松耦合的设计建立有弹性的 OO 系统, 因为对象之间的依赖降到最低.
		
java.util.Observable/Observer 是java 内置的观察者模式.

有多个观察者时,不可以依赖特定的统治次序.
一旦观察者/可观察者的实现有所改变, 通知次序就会改变, 很可能产生错误的结果.